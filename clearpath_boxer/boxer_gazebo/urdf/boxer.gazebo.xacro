<?xml version="1.0"?>

<robot name="boxer" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:arg name="robot_namespace" default="/" />
  <xacro:arg name="lidar_rays" default="720" />
  <xacro:property name="M_PI" value="3.14159" />
  <xacro:arg name="velocity_controller" default="true" />

  <!-- Simulation for BOXER's IMU. -->
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>50.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.005 0.005 0.005 </rateDrift>
        <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <xacro:unless value="$(arg velocity_controller)">
    <gazebo>
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <!-- Plugin update rate in Hz -->
        <updateRate>50</updateRate>
        <!-- Name of left joint, defaults to `left_joint` -->
        <leftJoint>wheel_left_joint</leftJoint>
        <!-- Name of right joint, defaults to `right_joint` -->
        <rightJoint>wheel_right_joint</rightJoint>
        <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
        <wheelSeparation>0.5380</wheelSeparation>
        <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
        <wheelDiameter>0.2410</wheelDiameter>
        <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
        <wheelAcceleration>1.0</wheelAcceleration>
        <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
        <wheelTorque>10</wheelTorque>
        <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
        <commandTopic>cmd_vel</commandTopic>
        <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
        <odometryTopic>odom</odometryTopic>
        <!-- Odometry frame, defaults to `odom` -->
        <odometryFrame>odom</odometryFrame>
        <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
        <robotBaseFrame>base_link</robotBaseFrame>
        <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
        <odometrySource>0</odometrySource>
        <!-- Set to true to publish transforms for the wheel links, defaults to false -->
        <publishWheelTF>true</publishWheelTF>
        <!-- Set to true to publish transforms for the odometry, defaults to true -->
        <publishOdom>true</publishOdom>
        <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
        <publishWheelJointState>true</publishWheelJointState>
        <!-- Set to true to swap right and left wheels, defaults to true -->
        <legacyMode>false</legacyMode>
      </plugin>
    </gazebo>
  </xacro:unless>

  <gazebo>
    <!-- Plugin for ros_control (actuate drive motors, lift). -->
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <robotParam>robot_description</robotParam>
    </plugin>

    <!-- Groud Truth Position, Pose, and Rates plugin -->
    <!-- <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>ground_truth/odom</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin> -->
    <!-- BOXER Platform Plugin -->
  </gazebo>

  <gazebo reference="rear_left_sonar_link">
    <sensor type="ray" name="rear_left_sonar">
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>1.2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>

      <plugin name="gazebo_ros_rear_left_sonar_controller" filename="libhector_gazebo_ros_sonar.so">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/sonar/left</topicName>
        <frameId>rear_left_sonar_link</frameId>
        <updateRate>5</updateRate>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="rear_right_sonar_link">
    <sensor type="ray" name="rear_right_sonar">
      <always_on>false</always_on>
      <update_rate>5</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.13083332777</min_angle>
            <max_angle>0.13083332777</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>1.2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>

      <plugin name="gazebo_ros_rear_right_sonar_controller" filename="libhector_gazebo_ros_sonar.so">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/sonar/right</topicName>
        <frameId>rear_right_sonar_link</frameId>
        <updateRate>5</updateRate>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="flash_light_link">
    <light name='light_source' type='spot'>
      <pose>0.5 0 0.3 0 -1.57 0</pose>
      <diffuse>1 1 1 1</diffuse>
      <specular>0 0 0 1</specular>
      <direction>0 0 -1</direction>
      <attenuation>
        <range>0</range>
        <constant>0.05</constant>
        <linear>0.08</linear>
        <quadratic>0.0</quadratic>
      </attenuation>
      <spot>
        <inner_angle>0.10</inner_angle>
        <outer_angle>2.0</outer_angle>
        <falloff>0.0</falloff>
      </spot>
    </light>
    <selfCollide>false</selfCollide>
  </gazebo>

  <xacro:macro name="wheel" params="side">
    <gazebo reference="wheel_${side}_link">
      <!-- For wheels, we need high PID values to avoid slippage -->
      <kp>100000000.0</kp>
      <kd>10000.0</kd>
      <!-- Wheels have friction to prevent slippage -->
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
      <minDepth>0.0</minDepth>
      <material>Gazebo/DarkGrey</material>
      <selfCollide>false</selfCollide>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="castor" params="side">
    <gazebo reference="rotacastor_${side}_link">
      <!-- For castors, we need high PID values to avoid slippage -->
      <kp>100000000.0</kp>
      <kd>10000.0</kd>
      <!-- Castors will slide freely to allow turning -->
      <mu1>0</mu1>
      <mu2>0</mu2>
      <minDepth>0.0</minDepth>
      <material>Gazebo/DarkGrey</material>
      <selfCollide>false</selfCollide>
    </gazebo>
  </xacro:macro>

  <xacro:castor side="left" />
  <xacro:castor side="right" />
  <xacro:wheel side="left" />
  <xacro:wheel side="right" />

  <!-- Load the main robot description -->
  <xacro:include filename="$(find boxer_description)/urdf/boxer.urdf.xacro" />
</robot>
